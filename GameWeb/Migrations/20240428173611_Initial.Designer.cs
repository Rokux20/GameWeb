// <auto-generated />
using GameWeb.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameWeb.Migrations
{
    [DbContext(typeof(FarmDbContext))]
    [Migration("20240428173611_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameWeb.Models.Crops", b =>
                {
                    b.Property<int>("CropId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CropId"));

                    b.Property<string>("CropName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.HasKey("CropId");

                    b.HasIndex("FarmId");

                    b.ToTable("Crops");
                });

            modelBuilder.Entity("GameWeb.Models.Devices", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeviceId"));

                    b.Property<string>("Consumer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.HasKey("DeviceId");

                    b.HasIndex("FarmId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("GameWeb.Models.DevicesTypeEnergy", b =>
                {
                    b.Property<int>("DevicesEnergyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DevicesEnergyId"));

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int>("TypeEnergyId")
                        .HasColumnType("int");

                    b.HasKey("DevicesEnergyId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("TypeEnergyId");

                    b.ToTable("DevicesTypeEnergy");
                });

            modelBuilder.Entity("GameWeb.Models.Farms", b =>
                {
                    b.Property<int>("FarmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FarmId"));

                    b.Property<string>("FarmName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FarmId");

                    b.ToTable("Farms");
                });

            modelBuilder.Entity("GameWeb.Models.Tasks", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<bool>("Finished")
                        .HasColumnType("bit");

                    b.HasKey("TaskId");

                    b.HasIndex("FarmId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("GameWeb.Models.TypeEnergy", b =>
                {
                    b.Property<int>("TypeEnergyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeEnergyId"));

                    b.Property<string>("TypeEnergyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeEnergyId");

                    b.ToTable("TypeEnergy");
                });

            modelBuilder.Entity("GameWeb.Models.Crops", b =>
                {
                    b.HasOne("GameWeb.Models.Farms", "Farm")
                        .WithMany("Crops")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("GameWeb.Models.Devices", b =>
                {
                    b.HasOne("GameWeb.Models.Farms", "Farm")
                        .WithMany("Devices")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("GameWeb.Models.DevicesTypeEnergy", b =>
                {
                    b.HasOne("GameWeb.Models.Devices", "Device")
                        .WithMany("DevicesTypeEnergy")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameWeb.Models.TypeEnergy", "TypeEnergy")
                        .WithMany("DevicesTypeEnergy")
                        .HasForeignKey("TypeEnergyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("TypeEnergy");
                });

            modelBuilder.Entity("GameWeb.Models.Tasks", b =>
                {
                    b.HasOne("GameWeb.Models.Farms", "Farm")
                        .WithMany("Tasks")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("GameWeb.Models.Devices", b =>
                {
                    b.Navigation("DevicesTypeEnergy");
                });

            modelBuilder.Entity("GameWeb.Models.Farms", b =>
                {
                    b.Navigation("Crops");

                    b.Navigation("Devices");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("GameWeb.Models.TypeEnergy", b =>
                {
                    b.Navigation("DevicesTypeEnergy");
                });
#pragma warning restore 612, 618
        }
    }
}
